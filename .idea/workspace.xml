<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2ea482dd-698b-490a-b425-f3e9f82561af" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/renascence/backend/controllers/RestaurantController.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/renascence/backend/controllers/RestaurantController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/renascence/backend/entities/DeliveryGuySalary.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/renascence/backend/entities/DeliveryGuySalary.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;ivo6446&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Rezt1/DeliverySystem.git&quot;,
    &quot;accountId&quot;: &quot;0fba0679-cf8a-4b61-9ee3-6e42bd564511&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="QODANA_PROBLEMS_VIEW_TAB" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2uXiUAfZ1JZCnkf9b0TBbkDF8pf" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.BackendApplication.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editCity_shouldThrowExceptionWhenCityIsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editCity_shouldThrowExceptionWhenCityNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editCity_shouldUpdateCitySuccessfully.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editCuisine_shouldThrowExceptionWhenCuisineNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editCuisine_shouldUpdateCuisineSuccessfully.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editFood_shouldThrowExceptionWhenFoodIsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editFood_shouldThrowExceptionWhenFoodNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editFood_shouldUpdateFoodSuccessfully.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editRestaurant_shouldThrowExceptionIfIbanAlreadyExists.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editRestaurant_shouldThrowExceptionIfRestaurantIsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editRestaurant_shouldThrowExceptionIfRestaurantNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.editRestaurant_shouldUpdateRestaurantSuccessfully.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.removeCity_shouldMarkCityAsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.removeCity_shouldRemoveDeliveryGuysAssociatedWithCity.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.removeCity_shouldThrowException_whenCityAlreadyDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.removeCity_shouldThrowException_whenCityNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.removeRestaurant_shouldMarkRestaurantAndFoodsAsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.removeRestaurant_shouldThrowException_whenRestaurantAlreadyDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.removeRestaurant_shouldThrowException_whenRestaurantNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testCreateCity.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testCreateCuisine.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testCreateFood.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testCreateRestaurant.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testCreateRestaurant_IbanAlreadyExists.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testGetAllDeliveryGuys.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testGetDeliveryGuyById_NotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testGetDeliveryGuyById_Success.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testGetIncome.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testGetIncomeByDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testPayDeliveryGuy_DeliveryGuyNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testPayDeliveryGuy_InvalidStartDate.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.AdminServiceTest.testPayDeliveryGuy_Success.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testRemoveRestaurant_AlreadyRemoved.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testRemoveRestaurant_RestaurantNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testRemoveRestaurant_Success.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testRemoveRestaurant_Success_WithFoods.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AdminServiceTest.testRemoveRestaurant_WithDeletedFoods.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.AuthServiceTest.login_whenAlreadyAuthenticated_shouldReturnForbidden.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AuthServiceTest.login_whenAuthenticationFails_shouldReturnBadRequest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AuthServiceTest.login_whenValidCredentials_shouldReturnAuthResponse.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AuthServiceTest.logout_whenErrorOccurs_shouldReturnInternalServerError.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AuthServiceTest.logout_whenNoAuthHeader_shouldReturnOk.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AuthServiceTest.logout_whenValidToken_shouldRevokeTokens.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CityRepositoryTest.cityRepository_saveCity_ShouldReturnSavedCity.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CityRepositoryTest.saveCity_ShouldPersist.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CityServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CityServiceTest.getAllCities_ShouldReturnAllCitiesAsDtos.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CityServiceTest.getCityById_WithExistingId_ShouldReturnCityDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CuisineServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CuisineServiceTest.getAllCuisines_ShouldReturnAllCuisinesAsDtos.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CuisineServiceTest.getAllCuisines_WhenNoCuisinesExist_ShouldReturnEmptyList.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CuisineServiceTest.getCuisineById_WithExistingId_ShouldReturnConvertedDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CustomUserDetailsServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CustomUserDetailsServiceTest.loadUserByUsername_userDoesNotExist_throwsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CustomUserDetailsServiceTest.loadUserByUsername_userExists_returnsCustomUserDetails.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.assignDelivery_ThrowsException_WhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.assignDelivery_shouldSuccessfullyAssignDelivery.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.assignDelivery_shouldThrowWhenDeliveryNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.assignDelivery_shouldThrowWhenUserIsNotDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.getCurrentDelivery_shouldOnlyReturnOutForDeliveryStatus.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.getCurrentDelivery_shouldReturnNullWhenNoActiveDeliveries.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.getSalaries_ShouldReturnDeliveryGuysSalaries.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.markAsDelivered_ShouldMarkDeliveryAsDelivered.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testAssignDelivery_shouldThrowWhenAlreadyAssigned.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testAssignDelivery_shouldThrowWhenDeliveryNotInSameCity.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testAssignDelivery_shouldThrowWhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testAssignDelivery_successful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetCurrentDeliveryForDeliveryGuy_Success.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetCurrentDeliveryForDeliveryGuy_shouldReturnCurrentDeliveryForDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetCurrentDeliveryForDeliveryGuy_shouldThrowWhenUserIsNotDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetCurrentDeliveryForDeliveryGuy_shouldThrowWhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetFinishedDeliveries_shouldReturnDeliveredDeliveries.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetFinishedDeliveries_shouldThrowWhenUserIsNotDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetFinishedDeliveries_shouldThrowWhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetPendingDeliveries_shouldReturnDeliveries.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetPendingDeliveries_shouldThrowWhenUserIsNotDeliveryGuy_andUserDoesNotExist.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetPendingDeliveries_shouldThrowWhenUserIsNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetSalaries_shouldReturnSalaryDtos.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetSalaries_shouldThrowWhenUserIsNotDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testGetSalaries_shouldThrowWhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testMarkAsDelivered_Success.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testMarkAsDelivered_shouldMarkSuccessfully.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testMarkAsDelivered_shouldThrowWhenDeliveryNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testMarkAsDelivered_shouldThrowWhenNoActiveDelivery.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testMarkAsDelivered_shouldThrowWhenUserIsNotDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testMarkAsDelivered_shouldThrowWhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testQuit_shouldSucceedAndReturnMessage.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testQuit_shouldThrowWhenNotDeliveryGuy.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTest.testQuit_shouldThrowWhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryGuyServiceTests.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.createDelivery_shouldCreateDeliverySuccessfully.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.createDelivery_shouldThrowIfFirstFoodNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.createDelivery_shouldThrowIfFoodDeletedInLoop.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.createDelivery_shouldThrowIfFoodNotFoundInLoop.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.createDelivery_shouldThrowIfRestaurantIsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.createDelivery_shouldThrowIfUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.getDeliveryById_shouldReturnDeliveryDtoIfValid.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.getDeliveryById_shouldThrowIfDeliveryNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.getDeliveryById_shouldThrowIfDeliveryNotOwnedByUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DeliveryServiceTest.getDeliveryById_shouldThrowIfUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.testGetFoodById_FoodIsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.testGetFoodById_FoodNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.testGetFoodById_Success.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.testGetFoodsByRestaurant_ExcludesDeletedFoods.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.testGetFoodsByRestaurant_RestaurantIsDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.testGetFoodsByRestaurant_RestaurantNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.FoodServiceTest.testGetFoodsByRestaurant_Success.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceTest.getEmailFromToken_ShouldReturnCorrectEmail.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceTest.validateToken_ShouldHandleExpiredToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceTest.validateToken_ShouldReturnFalseForMissingToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceTest.validateToken_ShouldReturnFalseForRevokedToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceTest.validateToken_ShouldReturnTrueForValidToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_cityNotFound_throwsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_cuisineNotFound_throwsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_deletedCity_throwsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_filterByCuisine_returnsOnlyMatchingCuisine.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_sortByNameAscending_sortedCorrectly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_sortByNameDescending_sortedCorrectly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_sortByRatingAscending_sortedCorrectly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RestaurantServiceTest.getAllRestaurants_sortByRatingDescending_sortedCorrectly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.testGetActiveDeliveries_shouldReturnActiveOnesOnly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.testGetActiveDeliveries_shouldReturnPendingAndOutForDelivery.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.testGetActiveDeliveries_userNotFound_shouldThrow.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.testGetPastDeliveries_shouldReturnDeliveredOnly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.testGetPastDeliveries_userNotFound_shouldThrow.executor&quot;: &quot;Run&quot;,
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;Spring Boot.BackendApplication.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Ivo/Desktop/DeliverySystem/backend&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="JUnit.RestaurantServiceTest">
    <configuration name="AuthServiceTest.login_whenAuthenticationFails_shouldReturnBadRequest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.renascence.backend.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.renascence.backend.service" />
      <option name="MAIN_CLASS_NAME" value="com.renascence.backend.service.AuthServiceTest" />
      <option name="METHOD_NAME" value="login_whenAuthenticationFails_shouldReturnBadRequest" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DeliveryGuyServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.renascence.backend.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.renascence.backend.service" />
      <option name="MAIN_CLASS_NAME" value="com.renascence.backend.service.DeliveryGuyServiceTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DeliveryGuyServiceTest.getSalaries_ShouldReturnDeliveryGuysSalaries" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.renascence.backend.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.renascence.backend.service" />
      <option name="MAIN_CLASS_NAME" value="com.renascence.backend.service.DeliveryGuyServiceTest" />
      <option name="METHOD_NAME" value="getSalaries_ShouldReturnDeliveryGuysSalaries" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DeliveryGuyServiceTest.markAsDelivered_ShouldMarkDeliveryAsDelivered" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.renascence.backend.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.renascence.backend.service" />
      <option name="MAIN_CLASS_NAME" value="com.renascence.backend.service.DeliveryGuyServiceTest" />
      <option name="METHOD_NAME" value="markAsDelivered_ShouldMarkDeliveryAsDelivered" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="RestaurantServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.renascence.backend.service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.renascence.backend.service" />
      <option name="MAIN_CLASS_NAME" value="com.renascence.backend.service.RestaurantServiceTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BackendApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="backend" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.renascence.backend.BackendApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.RestaurantServiceTest" />
        <item itemvalue="JUnit.AuthServiceTest.login_whenAuthenticationFails_shouldReturnBadRequest" />
        <item itemvalue="JUnit.DeliveryGuyServiceTest" />
        <item itemvalue="JUnit.DeliveryGuyServiceTest.getSalaries_ShouldReturnDeliveryGuysSalaries" />
        <item itemvalue="JUnit.DeliveryGuyServiceTest.markAsDelivered_ShouldMarkDeliveryAsDelivered" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2ea482dd-698b-490a-b425-f3e9f82561af" name="Changes" comment="" />
      <created>1742401334512</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1742401334512</updated>
      <workItem from="1742401335113" duration="4826000" />
      <workItem from="1742406221242" duration="11000" />
      <workItem from="1742406316110" duration="774000" />
      <workItem from="1742407127194" duration="78000" />
      <workItem from="1742407250476" duration="138000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>